#Follow below commands to create EKS cluster

Install eksctl – A command line tool for working with EKS clusters that automates many individual tasks.

eksctl is a command line tool for working with EKS clusters that automates many individual tasks.

The eksctl tool uses CloudFormation under the hood, creating one stack for the EKS master control plane and another stack for the worker nodes.
Download and extract the latest release of eksctl with the following command.

curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
Move the extracted binary to /usr/local/bin. 

sudo mv /tmp/eksctl /usr/local/bin

eksctl version

Install kubectl – A command line tool for working with Kubernetes clusters.

sudo curl --silent --location -o /usr/local/bin/kubectl   https://s3.us-west-2.amazonaws.com/amazon-eks/1.22.6/2022-03-09/bin/linux/amd64/kubectl

sudo chmod +x /usr/local/bin/kubectl 

Verify if kubectl got installed

kubectl version --short --client

Create IAM Role with Administrator Access

Assign the role to EC2 instance

Switch to Jenkins user

sudo su - jenkins

Create EKS Cluster with two worker nodes using eksctl

eksctl create cluster --name demo-eks --region ap-south-1 --nodegroup-name my-nodes --node-type t2.micro --managed --nodes 2 

eksctl get cluster --name demo-eks --region ap-south-1

This should confirm that EKS cluster is up and running.

Update Kube config by entering below command:

aws eks update-kubeconfig --name demo-eks --region ap-south-1

kubeconfig file be updated under /var/lib/jenkins/.kube folder.

you can view the kubeconfig file by entering the below command:

cat  /var/lib/jenkins/.kube/config

Connect to EKS cluster using kubectl commands

To view the list of worker nodes as part of EKS cluster.

kubectl get nodes
kubectl get ns

Delete EKS Cluster using eksctl
eksctl delete cluster --name demo-eks --region ap-south-1


